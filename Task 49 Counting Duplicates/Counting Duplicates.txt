Count the number of Duplicates
Write a function that will return the count of distinct case-insensitive 
alphabetic characters and numeric digits that occur more than once in the 
input string. The input string can be assumed to contain only alphabets 
(both uppercase and lowercase) and numeric digits.

Example
"abcde" -> 0 # no characters repeats more than once
"aabbcde" -> 2 # 'a' and 'b'
"aabBcde" -> 2 # 'a' occurs twice and 'b' twice (`b` and `B`)
"indivisibility" -> 1 # 'i' occurs six times
"Indivisibilities" -> 2 # 'i' occurs seven times and 's' occurs twice
"aA11" -> 2 # 'a' and '1'
"ABBA" -> 2 # 'A' and 'B' each occur twice
-----------------------------------------------------------------------
Подсчитайте количество дубликатов
Напишите функцию, которая будет возвращать количество различных символов без учета регистра.
буквенные символы и цифры, встречающиеся более одного раза в
строка ввода. Можно предположить, что входная строка содержит только алфавиты
(как в верхнем, так и в нижнем регистре) и числовые цифры.

Пример
"abcde" -> 0 # символы не повторяются более одного раза
"aabbcde" -> 2 # "а" и "б"
"aabBcde" -> 2 # 'a' встречается дважды и 'b' дважды (`b` и `B`)
"неделимость" -> 1 # 'i' встречается шесть раз
«Неделимость» -> 2 # 'i' встречается семь раз, а 's' встречается дважды
«aA11» -> 2 # «а» и «1»
«ABBA» -> 2 # «A» и «B» встречаются дважды
-----------------------------------------------------------------------

import codewars_test as test
from solution import duplicate_count

@test.describe("Fixed Tests")
def fixed_tests():
    @test.it("Basic Tests")
    def basic_tests():
        test.assert_equals(duplicate_count(""), 0)
        test.assert_equals(duplicate_count("abcde"), 0)
        test.assert_equals(duplicate_count("abcdeaa"), 1)
        test.assert_equals(duplicate_count("abcdeaB"), 2)
        test.assert_equals(duplicate_count("Indivisibilities"), 2)