
The Fibonacci numbers are the numbers in the following integer sequence (Fn):

0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, ...

such as

F(n) = F(n-1) + F(n-2) with F(0) = 0 and F(1) = 1.

Given a number, say prod (for product), we search two Fibonacci numbers F(n) and F(n+1) verifying

F(n) * F(n+1) = prod.

Your function productFib takes an integer (prod) and returns an array:

[F(n), F(n+1), true] or {F(n), F(n+1), 1} or (F(n), F(n+1), True)
depending on the language if F(n) * F(n+1) = prod.

If you don't find two consecutive F(n) verifying F(n) * F(n+1) = prodyou will return

[F(n), F(n+1), false] or {F(n), F(n+1), 0} or (F(n), F(n+1), False)
F(n) being the smallest one such as F(n) * F(n+1) > prod.

Some Examples of Return:
(depend on the language)

productFib(714) # should return (21, 34, true), 
                # since F(8) = 21, F(9) = 34 and 714 = 21 * 34

productFib(800) # should return (34, 55, false), 
                # since F(8) = 21, F(9) = 34, F(10) = 55 and 21 * 34 < 800 < 34 * 55
-----
productFib(714) # should return [21, 34, true], 
productFib(800) # should return [34, 55, false], 
-----
productFib(714) # should return {21, 34, 1}, 
productFib(800) # should return {34, 55, 0},        
-----
productFib(714) # should return {21, 34, true}, 
productFib(800) # should return {34, 55, false}, 
Note:
You can see examples for your language in "Sample Tests".

-----------------------------------------------------------------------

Числа Фибоначчи — это числа в следующей целочисленной последовательности (Fn):

0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, ...

такие как

F(n) = F(n-1) + F(n-2), где F(0) = 0 и F(1) = 1.

Имея число, скажем, prod (для произведения), мы ищем два числа Фибоначчи F(n) и F(n+1), проверяя

F(n) * F(n+1) = произв.

Ваша функция productFib принимает целое число (prod) и возвращает массив:

[F(n), F(n+1), правда] или {F(n), F(n+1), 1} или (F(n), F(n+1), правда)
в зависимости от языка, если F(n) * F(n+1) = prod.

Если вы не найдете два последовательных F(n), подтверждающих F(n) * F(n+1) = prod, вы вернетесь

[F(n), F(n+1), ложь] или {F(n), F(n+1), 0} или (F(n), F(n+1), ложь)
F(n) — наименьший, такой как F(n) * F(n+1) > prod.

Некоторые примеры возврата:
(зависит от языка)

productFib(714) # должен вернуть (21, 34, true),
                # так как F(8) = 21, F(9) = 34 и 714 = 21 * 34

productFib(800) # должен вернуть (34, 55, false),
                # так как F(8) = 21, F(9) = 34, F(10) = 55 и 21 * 34 < 800 < 34 * 55
-----
productFib(714) # должен возвращать [21, 34, true],
productFib(800) # должен вернуть [34, 55, false],
-----
productFib(714) # должен возвращать {21, 34, 1},
productFib(800) # должен вернуть {34, 55, 0},
-----
productFib(714) # должен вернуть {21, 34, true},
productFib(800) # должен вернуть {34, 55, false},
Примечание:
Вы можете увидеть примеры для вашего языка в разделе "Образцы тестов".

-----------------------------------------------------------------------

test.assert_equals(productFib(4895), [55, 89, True])
test.assert_equals(productFib(5895), [89, 144, False])
