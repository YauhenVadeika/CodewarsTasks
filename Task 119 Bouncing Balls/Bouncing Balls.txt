
A child is playing with a ball on the nth floor of a tall building. 
The height of this floor, h, is known.

He drops the ball out of the window. The ball bounces (for example), 
to two-thirds of its height (a bounce of 0.66).

His mother looks out of a window 1.5 meters from the ground.

How many times will the mother see the ball pass in front of 
her window (including when it's falling and bouncing?

Three conditions must be met for a valid experiment:
Float parameter "h" in meters must be greater than 0
Float parameter "bounce" must be greater than 0 and less than 1
Float parameter "window" must be less than h.
If all three conditions above are fulfilled, return a positive integer, 
otherwise return -1.

Note:
The ball can only be seen if the height of the rebounding ball is strictly greater than the window parameter.

Examples:
- h = 3, bounce = 0.66, window = 1.5, result is 3

- h = 3, bounce = 1, window = 1.5, result is -1 

(Condition 2) not fulfilled).

-----------------------------------------------------------------------

Ребенок играет с мячом на n-м этаже высотного здания.
Высота этого этажа h известна.

Он бросает мяч из окна. Мяч отскакивает (например),
до двух третей своей высоты (отскок 0,66).

Его мать смотрит из окна в 1,5 метрах от земли.

Сколько раз мать увидит, как мяч проходит перед
ее окно (в том числе когда оно падает и подпрыгивает?

Для достоверности эксперимента должны быть соблюдены три условия:
Плавающий параметр "h" в метрах должен быть больше 0
Плавающий параметр "bounce" должен быть больше 0 и меньше 1
Плавающий параметр "окно" должен быть меньше h.
Если все три условия выше выполнены, вернуть положительное целое число,
в противном случае вернуть -1.

Примечание:
Мяч можно увидеть только в том случае, если высота отскакивающего 
мяча строго больше параметра окна.

Примеры:
- h = 3, bounce = 0,66, window = 1,5, результат 3

- h = 3, bounce = 1, window = 1.5, результат -1

(Условие 2) не выполнено).

-----------------------------------------------------------------------

@test.describe('Tests')
def fixed_tests():
    def testing(h, bounce, window, exp):
        actual = bouncing_ball(h, bounce, window)
        test.assert_equals(actual, exp)
        
    @test.it('Fixed Tests')
    def tests():
        testing(2, 0.5, 1, 1)
        testing(3, 0.66, 1.5, 3)
        testing(30, 0.66, 1.5, 15)
        testing(30, 0.75, 1.5, 21)