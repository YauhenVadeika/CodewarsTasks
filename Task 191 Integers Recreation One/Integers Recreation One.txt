
1, 246, 2, 123, 3, 82, 6, 41 are the divisors of number 246. 
Squaring these divisors we get: 1, 60516, 4, 15129, 9, 6724, 36, 1681. 
The sum of these squares is 84100 which is 290 * 290.

Task
Find all integers between m and n (m and n integers with 1 <= m <= n) 
such that the sum of their squared divisors is itself a square.

We will return an array of subarrays or of tuples (in C an array of Pair) or a string. 
The subarrays (or tuples or Pairs) will have two elements: 
first the number the squared divisors of which is a square and then the sum of the squared divisors.

Example:
list_squared(1, 250) --> [[1, 1], [42, 2500], [246, 84100]]
list_squared(42, 250) --> [[42, 2500], [246, 84100]]
The form of the examples may change according to the language, see "Sample Tests".

Note
In Fortran - as in any other language - the returned string is 
not permitted to contain any redundant trailing whitespace: 
you can use dynamically allocated character strings.

-----------------------------------------------------------------------

1, 246, 2, 123, 3, 82, 6, 41 — делители числа 246.
Возводя эти делители в квадрат получаем: 1, 60516, 4, 15129, 9, 6724, 36, 1681.
Сумма этих квадратов равна 84100, что равно 290*290.

Задача
Найти все целые числа от m до n (целые числа m и n с 1 <= m <= n)
так что сумма квадратов их делителей сама является квадратом.

Мы вернем массив подмассивов или кортежей (в C массив Pair) или строку.
Подмассивы (или кортежи или пары) будут состоять из двух элементов:
сначала число, квадрат делителей которого является квадратом, а затем сумма квадратов делителей.

Пример:
list_squared(1, 250) --> [[1, 1], [42, 2500], [246, 84100]]
list_squared(42, 250) --> [[42, 2500], [246, 84100]]
Форма примеров может меняться в зависимости от языка, см. «Примеры тестов».

Примечание
В Фортране, как и в любом другом языке, возвращаемая строка
не разрешено содержать лишние пробелы в конце:
вы можете использовать динамически выделяемые строки символов.

-----------------------------------------------------------------------

import codewars_test as test
from solution import list_squared

@test.describe('Tests...')
def _():
    @test.it('Fixed Tests')
    def _():
        test.assert_equals(list_squared(1, 250), [[1, 1], [42, 2500], [246, 84100]])
        test.assert_equals(list_squared(42, 250), [[42, 2500], [246, 84100]])
        test.assert_equals(list_squared(250, 500), [[287, 84100]])

-----------------------------------------------------------------------