
A square of squares
You like building blocks. You especially like building blocks that are squares. 
And what you even like more, is to arrange them into a square of square building blocks!

However, sometimes, you can't arrange them into a square. 
Instead, you end up with an ordinary rectangle! 
Those blasted things! If you just had a way to know, 
whether you're currently working in vain… Wait! That's it! 
You just have to check if your number of building blocks is a perfect square.

Task
Given an integral number, determine if it's a square number:

In mathematics, a square number or perfect square is an integer 
that is the square of an integer; in other words, it is the 
product of some integer with itself.

The tests will always use some integral number, 
so don't worry about that in dynamic typed languages.

Examples
-1  =>  false
 0  =>  true
 3  =>  false
 4  =>  true
25  =>  true
26  =>  false

-----------------------------------------------------------------------

Квадрат из квадратов
Вам нравятся строительные блоки. Вам особенно нравятся квадратные строительные блоки.
А что вам еще больше нравится, так это собирать их в квадрат из квадратных строительных блоков!

Однако иногда вы не можете расположить их в квадрат.
Вместо этого у вас получится обычный прямоугольник!
Эти проклятые вещи! Если бы у вас был способ узнать,
то ли вы сейчас работаете напрасно… Подождите! Вот и все!
Вам просто нужно проверить, является ли количество строительных блоков идеальным квадратом.

Задача
Учитывая целое число, определите, является ли оно квадратным числом:

В математике квадратное число или совершенный квадрат — это целое число.
это квадрат целого числа; другими словами, это
произведение некоторого целого числа на себя.

Тесты всегда будут использовать некоторое целое число,
так что не беспокойтесь об этом в языках с динамической типизацией.

Примеры
-1 => ложь
 0 => правда
 3 => ложь
 4 => правда
25 => правда
26 => ложь

-----------------------------------------------------------------------

import codewars_test as test
from solution import is_square

@test.describe("Fixed Tests")
def fixed_tests():
    @test.it('Basic Test Cases')
    def basic_test_cases():
        test.assert_equals(is_square(-1), False, "-1: Negative numbers cannot be square numbers")
        test.assert_equals(is_square( 0), True, "0 is a square number (0 * 0)")
        test.assert_equals(is_square( 3), False, "3 is not a square number")
        test.assert_equals(is_square( 4), True, "4 is a square number (2 * 2)")
        test.assert_equals(is_square(25), True, "25 is a square number (5 * 5)")
        test.assert_equals(is_square(26), False, "26 is not a square number")

-----------------------------------------------------------------------