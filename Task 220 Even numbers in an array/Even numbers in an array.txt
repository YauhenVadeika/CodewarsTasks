
Given an array of numbers, return a new array of length number containing 
the last even numbers from the original array (in the same order). 
The original array will be not empty and will contain at least "number" even numbers.

For example:

([1, 2, 3, 4, 5, 6, 7, 8, 9], 3) => [4, 6, 8]
([-22, 5, 3, 11, 26, -6, -7, -8, -9, -8, 26], 2) => [-8, 26]
([6, -25, 3, 7, 5, 5, 7, -3, 23], 1) => [6]

-------------------------------------------------------------------------------------------------------

Учитывая массив чисел, вернуть новый массив чисел длины, содержащий
последние четные числа из исходного массива (в том же порядке).
Исходный массив не будет пустым и будет содержать не менее "числа" четных чисел.

Например:

([1, 2, 3, 4, 5, 6, 7, 8, 9], 3) => [4, 6, 8]
([-22, 5, 3, 11, 26, -6, -7, -8, -9, -8, 26], 2) => [-8, 26]
([6, -25, 3, 7, 5, 5, 7, -3, 23], 1) => [6]

-------------------------------------------------------------------------------------------------------

test.it("Basic tests")
test.assert_equals(even_numbers([1, 2, 3, 4, 5, 6, 7, 8, 9], 3), [4, 6, 8]);
test.assert_equals(even_numbers([-22, 5, 3, 11, 26, -6, -7, -8, -9, -8, 26], 2), [-8, 26]);
test.assert_equals(even_numbers([6, -25, 3, 7, 5, 5, 7, -3, 23], 1), [6]);

-----------------------------------------------------------------------