
ROT13 is a simple letter substitution cipher that replaces a 
letter with the letter 13 letters after it in the alphabet. 
ROT13 is an example of the Caesar cipher.

Create a function that takes a string and returns the string 
ciphered with Rot13. If there are numbers or special characters 
included in the string, they should be returned as they are. 
Only letters from the latin/english alphabet should be shifted, 
like in the original Rot13 "implementation".

Please note that using encode is considered cheating.

-----------------------------------------------------------------------
ROT13 — это простой шифр с заменой букв, который заменяет
буква с буквой 13 букв после нее в алфавите.
ROT13 является примером шифра Цезаря.

Создайте функцию, которая принимает строку и возвращает строку
зашифровано с помощью Rot13. Если есть цифры или специальные символы
включены в строку, они должны быть возвращены как есть.
Только буквы латинского/английского алфавита должны быть смещены,
как в оригинальной "реализации" Rot13.

Обратите внимание, что использование encode считается читерством.
-----------------------------------------------------------------------

from solution import rot13

@test.describe("Fixed tests")
def tests():
        
    @test.it("Should obtain correct Rot13 encoding on fixed strings")
    def test_rot13_fixed_strings():
        test.assert_equals(rot13('test'), 'grfg', 'Returned solution incorrect for fixed string = test')
        test.assert_equals(rot13('Test'), 'Grfg', 'Returned solution incorrect for fixed string = Test')
        test.assert_equals(rot13('aA bB zZ 1234 *!?%'), 'nN oO mM 1234 *!?%', 'Returned solution incorrect for fixed string = aA bB zZ 1234 *!?%')