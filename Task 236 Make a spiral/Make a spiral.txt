
Your task, is to create a NxN spiral with a given size.

For example, spiral with size 5 should look like this:

00000
....0
000.0
0...0
00000
and with the size 10:

0000000000
.........0
00000000.0
0......0.0
0.0000.0.0
0.0..0.0.0
0.0....0.0
0.000000.0
0........0
0000000000
Return value should contain array of arrays, of 0 and 1, with the first row 
being composed of 1s. For example for given size 5 result should be:

[[1,1,1,1,1],[0,0,0,0,1],[1,1,1,0,1],[1,0,0,0,1],[1,1,1,1,1]]
Because of the edge-cases for tiny spirals, the size will be at least 5.

General rule-of-a-thumb is, that the snake made with '1' cannot touch to itself.

-----------------------------------------------------------------------

Ваша задача состоит в том, чтобы создать спираль NxN заданного размера.

Например, спираль размером 5 должна выглядеть так:

00000
....0
000.0
0...0
00000
и с размером 10:

0000000000
.........0
00000000.0
0......0.0
0.0000.0.0
0.0..0.0.0
0,0....0,0
0.000000.0
0........0
0000000000
Возвращаемое значение должно содержать массив массивов из 0 и 1 с первой строкой
состоит из 1с. Например, для данного размера 5 результат должен быть:

[[1,1,1,1,1],[0,0,0,0,1],[1,1,1,0,1],[1,0,0,0,1],[ 1,1,1,1,1]]
Из-за крайних случаев для крошечных спиралей размер будет не менее 5.

Общее практическое правило заключается в том, что змея, состоящая из «1», не может касаться самой себя.

-----------------------------------------------------------------------

test.assert_equals(spiralize(5), [[1,1,1,1,1],
                                  [0,0,0,0,1],
                                  [1,1,1,0,1],
                                  [1,0,0,0,1],
                                  [1,1,1,1,1]])
test.assert_equals(spiralize(8), [[1,1,1,1,1,1,1,1],
                                  [0,0,0,0,0,0,0,1],
                                  [1,1,1,1,1,1,0,1],
                                  [1,0,0,0,0,1,0,1],
                                  [1,0,1,0,0,1,0,1],
                                  [1,0,1,1,1,1,0,1],
                                  [1,0,0,0,0,0,0,1],
                                  [1,1,1,1,1,1,1,1]])

-----------------------------------------------------------------------