
In this simple assignment you are given a number and have to make it negative. 
But maybe the number is already negative?

Examples
make_negative(1);  # return -1
make_negative(-5); # return -5
make_negative(0);  # return 0
Notes
The number can be negative already, in which case no change is required.
Zero (0) is not checked for any specific sign. Negative zeros make no mathematical sense.

-----------------------------------------------------------------------

В этом простом задании вам дается число, и вы должны сделать его отрицательным.
А может быть, число уже отрицательное?

Примеры
сделать_отрицательный (1); # вернуть -1
сделать_отрицательный (-5); # вернуть -5
сделать_отрицательный (0); # вернуть 0
Примечания
Число может быть уже отрицательным, и в этом случае никаких изменений не требуется.
Ноль (0) не проверяется на наличие какого-либо конкретного знака. Отрицательные нули не имеют математического смысла.

-----------------------------------------------------------------------

import codewars_test as test
from solution import make_negative

@test.describe("Fixed Tests")
def basic_tests():
    @test.it('Basic Test Cases')
    def basic_test_cases():
        for n, expected in ((42,-42), (-9,-9), (0,0)):
            actual = make_negative(n)
            message = f"For n = {n}, expected {expected} but got {actual}"
            test.assert_equals(actual, expected, message)

-----------------------------------------------------------------------