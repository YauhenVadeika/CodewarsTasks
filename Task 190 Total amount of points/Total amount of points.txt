
Our football team has finished the championship.

Our team's match results are recorded in a collection of strings. 
Each match is represented by a string in the format "x:y", 
where x is our team's score and y is our opponents score.

For example: ["3:1", "2:2", "0:1", ...]

Points are awarded for each match as follows:

if x > y: 3 points (win)
if x < y: 0 points (loss)
if x = y: 1 point (tie)
We need to write a function that takes this collection and returns 
the number of points our team (x) got in the championship by the rules given above.

Notes:

our team always plays 10 matches in the championship
0 <= x <= 4
0 <= y <= 4

-----------------------------------------------------------------------

Наша футбольная команда завершила чемпионат.

Результаты матчей нашей команды записываются в виде набора строк.
Каждое совпадение представлено строкой в формате «x:y»,
где х — счет нашей команды, а у — счет соперника.

Например: ["3:1", "2:2", "0:1", ...]

Очки за каждый матч начисляются следующим образом:

если x > y: 3 очка (победа)
если x < y: 0 очков (проигрыш)
если x = y: 1 балл (ничья)
Нам нужно написать функцию, которая берет эту коллекцию и возвращает
количество очков, набранных нашей командой (x) в чемпионате по приведенным выше правилам.

Ноты:

наша команда всегда играет 10 матчей в чемпионате
0 <= х <= 4
0 <= у <= 4

-----------------------------------------------------------------------

import codewars_test as test
from solution import points

@test.describe("Fixed Tests")
def fixed_tests():
    @test.it('Basic Test Cases')
    def basic_test_cases():
        test.assert_equals(points(['1:0','2:0','3:0','4:0','2:1','3:1','4:1','3:2','4:2','4:3']), 30)
        test.assert_equals(points(['1:1','2:2','3:3','4:4','2:2','3:3','4:4','3:3','4:4','4:4']), 10)
        test.assert_equals(points(['0:1','0:2','0:3','0:4','1:2','1:3','1:4','2:3','2:4','3:4']), 0)
        test.assert_equals(points(['1:0','2:0','3:0','4:0','2:1','1:3','1:4','2:3','2:4','3:4']), 15)
        test.assert_equals(points(['1:0','2:0','3:0','4:4','2:2','3:3','1:4','2:3','2:4','3:4']), 12)

-----------------------------------------------------------------------