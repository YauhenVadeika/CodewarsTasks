Introduction

The wave (known as the Mexican wave in the English-speaking world outside North America) 
is an example of metachronal rhythm achieved in a packed stadium when successive groups 
of spectators briefly stand, yell, and raise their arms. Immediately upon stretching to 
full height, the spectator returns to the usual seated position.
The result is a wave of standing spectators that travels through the crowd, even though 
individual spectators never move away from their seats. In many large arenas the crowd 
is seated in a contiguous circuit all the way around the sport field, and so the wave 
is able to travel continuously around the arena; in discontiguous seating arrangements, 
the wave can instead reflect back and forth through the crowd. When the gap in seating 
is narrow, the wave can sometimes pass through it. Usually only one wave crest will be 
present at any given time in an arena, although simultaneous, counter-rotating waves 
have been produced. (Source Wikipedia)

Task

In this simple Kata your task is to create a function that turns a string into a Mexican Wave. 
You will be passed a string and you must return that string in an array where an uppercase 
letter is a person standing up. 

Rules
 1.  The input string will always be lower case but maybe empty.

 2.  If the character in the string is whitespace then pass over it as if it was an empty seat

Example

wave("hello") => ["Hello", "hEllo", "heLlo", "helLo", "hellO"]
-----------------------------------------------------------------------
Введение

Волна (известная как мексиканская волна в англоязычном мире за пределами Северной Америки)
является примером метахронного ритма, достигаемого на переполненном стадионе, когда 
последовательные группы зрителей ненадолго встают, кричат ​​и поднимают руки. Сразу после растяжения до
в полный рост зритель возвращается в обычное сидячее положение.
Результатом является волна стоящих зрителей, которая проходит через толпу, хотя
отдельные зрители никогда не отходят от своих мест. На многих больших аренах толпа
находится в непрерывном контуре по всему спортивному полю, поэтому волна
может непрерывно перемещаться по арене; в несмежных рассадках,
вместо этого волна может отражаться взад и вперед через толпу. Когда пробел в посадочных местах
узкий, волна иногда может пройти через него. Обычно бывает только один гребень волны.
присутствует в любое время на арене, хотя одновременные волны, вращающиеся в противоположных направлениях
были произведены. (Источник Википедия)

Задача
В этой простой ката ваша задача — создать функцию, которая превращает строку в мексиканскую волну.
Вам будет передана строка, и вы должны вернуть эту строку в массиве, где прописные буквы
письмо человек, стоящий.

Правила

 1. Строка ввода всегда будет строчной, но может быть и пустой.

 2. Если символ в строке является пробелом, пропустите его, как если бы это было пустое место.

Пример

волна("привет") => ["Привет", "привет", "привет", "приветЛо", "приветО"]
-----------------------------------------------------------------------

from solution import wave
import codewars_test as test

import random

@test.describe('Testing')
def example_tests():
    
    @test.describe('Example tests')
    def example_tests():

        result = ["Hello", "hEllo", "heLlo", "helLo", "hellO"]
        @test.it("Should return: '["+", ".join(result)+"]'")
        def example_test_case1():
            test.assert_equals(wave("hello"), result)

        result = ["Codewars", "cOdewars", "coDewars", "codEwars", "codeWars", "codewArs", "codewaRs", "codewarS"]
        @test.it("Should return: '["+", ".join(result)+"]'")
        def example_test_case2():
            test.assert_equals(wave("codewars"), result)

        result = []
        @test.it("Should return: '["+", ".join(result)+"]'")
        def example_test_case3():
            test.assert_equals(wave(""), result)

        result = ["Two words", "tWo words", "twO words", "two Words", "two wOrds", "two woRds", "two worDs", "two wordS"]
        @test.it("Should return: '["+", ".join(result)+"]'")
        def example_test_case4():
            test.assert_equals(wave("two words"),result)

        result = [" Gap ", " gAp ", " gaP "]
        @test.it("Should return: '["+", ".join(result)+"]'")
        def example_test_case5():
            test.assert_equals(wave(" gap "), result)

        result = ["A       b    ", "a       B    "]
        @test.it("Should return: '["+", ".join(result)+"]'")
        def example_test_case6():
            test.assert_equals(wave("a       b    "), result)

        result = ["This is a few words", "tHis is a few words", "thIs is a few words", "thiS is a few words", "this Is a few words", "this iS a few words", "this is A few words", "this is a Few words", "this is a fEw words", "this is a feW words", "this is a few Words", "this is a few wOrds", "this is a few woRds", "this is a few worDs", "this is a few wordS"]
        @test.it("Should return: '["+", ".join(result)+"]'")
        def example_test_case7():
            test.assert_equals(wave("this is a few words"), result)