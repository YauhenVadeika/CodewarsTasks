Enough is enough!
Alice and Bob were on a holiday. Both of them took many pictures 
of the places they've been, and now they want to show Charlie 
their entire collection. However, Charlie doesn't like these 
sessions, since the motif usually repeats. He isn't fond of 
seeing the Eiffel tower 40 times.
He tells them that he will only sit for the session if they 
show the same motif at most N times. Luckily, Alice and Bob 
are able to encode the motif as a number. Can you help them 
to remove numbers such that their list contains each number 
only up to N times, without changing the order?

Task
Given a list and a number, create a new list that contains 
each number of list at most N times, without reordering.
For example if the input number is 2, and the input list 
is [1,2,3,1,2,1,2,3], you take [1,2,3,1,2], drop the 
next [1,2] since this would lead to 1 and 2 being in the 
result 3 times, and then take 3, which leads to [1,2,3,1,2,3].
With list [20,37,20,21] and number 1, the result would be [20,37,21].

-----------------------------------------------------------------------
Хватит значит хватит!
Алиса и Боб были в отпуске. Оба они сделали много фотографий
мест, где они были, и теперь они хотят показать Чарли
вся их коллекция. Однако Чарли это не нравится.
сеансы, так как мотив обычно повторяется. он не любит
увидеть Эйфелеву башню 40 раз.
Он говорит им, что будет сидеть на сеансе только в том случае, если они
показать один и тот же мотив не более N раз. К счастью, Алиса и Боб
способны кодировать мотив как число. Можешь им помочь
удалить числа так, чтобы их список содержал каждое число
только до N раз, не меняя порядок?

Задача
Имея список и число, создайте новый список, содержащий
каждый номер списка не более N раз, без переупорядочения.
Например, если входное число равно 2, а входной список
[1,2,3,1,2,1,2,3], вы берете [1,2,3,1,2], опускаете
next [1,2], так как это привело бы к тому, что 1 и 2 оказались бы в
результат 3 раза, а затем взять 3, что приводит к [1,2,3,1,2,3].
Со списком [20,37,20,21] и числом 1 результатом будет [20,37,21].
-----------------------------------------------------------------------

test.assert_equals(delete_nth([20,37,20,21], 1), [20,37,21])
test.assert_equals(delete_nth([1,1,3,3,7,2,2,2,2], 3), [1, 1, 3, 3, 7, 2, 2, 2])