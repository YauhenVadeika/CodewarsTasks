
Complete the solution so that it splits the string 
into pairs of two characters. If the string contains 
an odd number of characters then it should replace 
the missing second character of the final pair with 
an underscore ('_').

Examples:

* 'abc' =>  ['ab', 'c_']
* 'abcdef' => ['ab', 'cd', 'ef']

-----------------------------------------------------------------------

Завершите решение, чтобы оно разбило строку
на пары из двух символов. Если строка содержит
нечетное количество символов, то он должен заменить
недостающий второй символ последней пары с
подчеркивание ('_').

Examples:

* 'abc' =>  ['ab', 'c_']
* 'abcdef' => ['ab', 'cd', 'ef']

-----------------------------------------------------------------------

test.describe("Example Tests")

tests = (
    ("asdfadsf", ['as', 'df', 'ad', 'sf']),
    ("asdfads", ['as', 'df', 'ad', 's_']),
    ("", []),
    ("x", ["x_"]),
)

for inp, exp in tests:
    test.assert_equals(solution(inp), exp)