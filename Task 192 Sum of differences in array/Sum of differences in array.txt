
Your task is to sum the differences between consecutive 
pairs in the array in descending order.

Example
[2, 1, 10]  -->  9
In descending order: [10, 2, 1]

Sum: (10 - 2) + (2 - 1) = 8 + 1 = 9

If the array is empty or the array has only one 
element the result should be 0 (Nothing in Haskell, None in Rust).

-----------------------------------------------------------------------

Ваша задача — просуммировать различия между последовательными 
парами в массиве в порядке убывания.

Пример
[2, 1, 10] --> 9
В порядке убывания: [10, 2, 1]

Сумма: (10 - 2) + (2 - 1) = 8 + 1 = 9

Если массив пуст или содержит только один элемент, 
результат должен быть равен 0 (ничего в Haskell, ничего в Rust).

-----------------------------------------------------------------------

import codewars_test as test
from solution import sum_of_differences

@test.describe("Sample tests")
def tests():
    @test.it("Some examples")
    def tests():
        test.assert_equals(sum_of_differences([1, 2, 10]), 9)
        test.assert_equals(sum_of_differences([-3, -2, -1]), 2)
        test.assert_equals(sum_of_differences([1, 1, 1, 1, 1]), 0)
        test.assert_equals(sum_of_differences([-17, 17]), 34)      
        test.assert_equals(sum_of_differences([]), 0)
        test.assert_equals(sum_of_differences([0]), 0)
        test.assert_equals(sum_of_differences([-1]), 0)
        test.assert_equals(sum_of_differences([1]), 0)
-----------------------------------------------------------------------